// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Dart bindings to call libspecter_rust functions
class SpecterRustBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  SpecterRustBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  SpecterRustBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<ffi.Int8> rust_greeting(
    ffi.Pointer<ffi.Int8> to,
  ) {
    return _rust_greeting(
      to,
    );
  }

  late final _rust_greeting_ptr =
      _lookup<ffi.NativeFunction<_c_rust_greeting>>('rust_greeting');
  late final _dart_rust_greeting _rust_greeting =
      _rust_greeting_ptr.asFunction<_dart_rust_greeting>();

  void rust_cstr_free(
    ffi.Pointer<ffi.Int8> s,
  ) {
    return _rust_cstr_free(
      s,
    );
  }

  late final _rust_cstr_free_ptr =
      _lookup<ffi.NativeFunction<_c_rust_cstr_free>>('rust_cstr_free');
  late final _dart_rust_cstr_free _rust_cstr_free =
      _rust_cstr_free_ptr.asFunction<_dart_rust_cstr_free>();

  ffi.Pointer<ffi.Int8> run_bitcoin_demo() {
    return _run_bitcoin_demo();
  }

  late final _run_bitcoin_demo_ptr =
      _lookup<ffi.NativeFunction<_c_run_bitcoin_demo>>('run_bitcoin_demo');
  late final _dart_run_bitcoin_demo _run_bitcoin_demo =
      _run_bitcoin_demo_ptr.asFunction<_dart_run_bitcoin_demo>();
}

typedef _c_rust_greeting = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> to,
);

typedef _dart_rust_greeting = ffi.Pointer<ffi.Int8> Function(
  ffi.Pointer<ffi.Int8> to,
);

typedef _c_rust_cstr_free = ffi.Void Function(
  ffi.Pointer<ffi.Int8> s,
);

typedef _dart_rust_cstr_free = void Function(
  ffi.Pointer<ffi.Int8> s,
);

typedef _c_run_bitcoin_demo = ffi.Pointer<ffi.Int8> Function();

typedef _dart_run_bitcoin_demo = ffi.Pointer<ffi.Int8> Function();
